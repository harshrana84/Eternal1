{"ast":null,"code":"var _jsxFileName = \"C:\\\\Photoshop2021x64\\\\Github Repo\\\\Eternal\\\\src\\\\components\\\\input.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport React, { useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextBoxCommonBase, InputBase, TextBoxDisable, TextBoxEnable } from 'components/utils/theme';\nexport const defaultProps = {\n  disabled: false,\n  readOnly: false,\n  className: '',\n  placeholder: '',\n  initialValue: ''\n};\nconst Input = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      className,\n      id,\n      value,\n      name,\n      initialValue,\n      disabled,\n      readOnly,\n      placeholder,\n      onChange,\n      onFocus,\n      onBlur\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"className\", \"id\", \"value\", \"name\", \"initialValue\", \"disabled\", \"readOnly\", \"placeholder\", \"onChange\", \"onFocus\", \"onBlur\"]);\n  const inputRef = useRef(null);\n  useImperativeHandle(ref, () => inputRef.current);\n  const {\n    0: initValue,\n    1: setInitValue\n  } = useState(initialValue);\n  const changeHandler = event => {\n    if (disabled || readOnly) return;\n    setInitValue(event.target.value);\n    onChange && onChange(event);\n  };\n  const focusHandler = e => {\n    onFocus && onFocus(e);\n  };\n  const blurHandler = e => {\n    onBlur && onBlur(e);\n  };\n  useEffect(() => {\n    if (value === undefined) return;\n    setInitValue(value);\n  }, [value]);\n  const classNames = InputBase + ' ' + TextBoxCommonBase + ' ' + (disabled === true ? TextBoxDisable : TextBoxEnable) + ' ' + className;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: id,\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, name), __jsx(\"input\", _extends({\n    ref: inputRef,\n    type: \"text\",\n    placeholder: placeholder,\n    className: classNames,\n    id: name,\n    value: initValue,\n    disabled: disabled,\n    readOnly: readOnly,\n    onChange: changeHandler,\n    onFocus: focusHandler,\n    onBlur: blurHandler,\n    autoComplete: \"off\",\n    name: name\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n});\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"names":["React","useEffect","useImperativeHandle","useRef","useState","TextBoxCommonBase","InputBase","TextBoxDisable","TextBoxEnable","defaultProps","disabled","readOnly","className","placeholder","initialValue","Input","forwardRef","_ref","ref","id","value","name","onChange","onFocus","onBlur","props","_objectWithoutProperties","inputRef","current","initValue","setInitValue","changeHandler","event","target","focusHandler","e","blurHandler","undefined","classNames","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_extends","type","autoComplete"],"sources":["C:/Photoshop2021x64/Github Repo/Eternal/src/components/input.tsx"],"sourcesContent":["import React, { useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport {\n  TextBoxCommonBase,\n  InputBase,\n  TextBoxDisable,\n  TextBoxEnable,\n} from 'components/utils/theme';\n\nexport interface Props {\n  value?: string;\n  initialValue?: string;\n  placeholder?: string;\n  readOnly?: boolean;\n  disabled?: boolean;\n  className?: string;\n  id?: string;\n  name?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  [key: string]: unknown;\n}\n\nexport const defaultProps = {\n  disabled: false,\n  readOnly: false,\n  className: '',\n  placeholder: '',\n  initialValue: '',\n};\n\ntype NativeAttrs = Omit<React.InputHTMLAttributes<any>, keyof Props>;\n\nexport type InputPropsType = Props & NativeAttrs;\n\nconst Input = React.forwardRef<\n  HTMLInputElement,\n  React.PropsWithChildren<InputPropsType>\n>(\n  (\n    {\n      className,\n      id,\n      value,\n      name,\n      initialValue,\n      disabled,\n      readOnly,\n      placeholder,\n      onChange,\n      onFocus,\n      onBlur,\n      ...props\n    },\n    ref: React.Ref<HTMLInputElement | null>\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    useImperativeHandle(ref, () => inputRef.current);\n\n    const [initValue, setInitValue] = useState<string>(initialValue);\n\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (disabled || readOnly) return;\n      setInitValue(event.target.value);\n      onChange && onChange(event);\n    };\n\n    const focusHandler = (e: React.FocusEvent<HTMLInputElement>) => {\n      onFocus && onFocus(e);\n    };\n    const blurHandler = (e: React.FocusEvent<HTMLInputElement>) => {\n      onBlur && onBlur(e);\n    };\n\n    useEffect(() => {\n      if (value === undefined) return;\n      setInitValue(value);\n    }, [value]);\n\n    const classNames =\n      InputBase +\n      ' ' +\n      TextBoxCommonBase +\n      ' ' +\n      (disabled === true ? TextBoxDisable : TextBoxEnable) +\n      ' ' +\n      className;\n\n    return (\n      <React.Fragment>\n        <label htmlFor={id} className=\"sr-only\">\n          {name}\n        </label>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          placeholder={placeholder}\n          className={classNames}\n          id={name}\n          value={initValue}\n          disabled={disabled}\n          readOnly={readOnly}\n          onChange={changeHandler}\n          onFocus={focusHandler}\n          onBlur={blurHandler}\n          autoComplete=\"off\"\n          name={name}\n          {...props}\n        />\n      </React.Fragment>\n    );\n  }\n);\n\nInput.defaultProps = defaultProps;\n\nexport default Input;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}