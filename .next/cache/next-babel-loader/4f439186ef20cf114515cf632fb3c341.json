{"ast":null,"code":"var _jsxFileName = \"C:\\\\Photoshop2021x64\\\\Github Repo\\\\Eternal\\\\src\\\\components\\\\textarea.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport React, { useEffect, useState } from 'react';\nimport { TextBoxCommonBase, TextareaBase, TextBoxDisable, TextBoxEnable } from './utils/theme';\nexport const defaultProps = {\n  disabled: false,\n  readOnly: false,\n  className: '',\n  placeholder: '',\n  initialValue: ''\n};\nconst Textarea = _ref => {\n  let {\n      className,\n      value,\n      initialValue,\n      disabled,\n      readOnly,\n      placeholder,\n      onChange,\n      onFocus,\n      onBlur\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"className\", \"value\", \"initialValue\", \"disabled\", \"readOnly\", \"placeholder\", \"onChange\", \"onFocus\", \"onBlur\"]);\n  const {\n    0: initValue,\n    1: setInitValue\n  } = useState(initialValue);\n  const changeHandler = event => {\n    if (disabled || readOnly) return;\n    setInitValue(event.target.value);\n    onChange && onChange(event);\n  };\n  const focusHandler = e => {\n    onFocus && onFocus(e);\n  };\n  const blurHandler = e => {\n    onBlur && onBlur(e);\n  };\n  useEffect(() => {\n    if (value === undefined) return;\n    setInitValue(value);\n  }, [value]);\n  const classNames = TextBoxCommonBase + ' ' + TextareaBase + ' ' + (disabled === true ? TextBoxDisable : TextBoxEnable) + ' ' + className;\n  return __jsx(\"textarea\", _extends({\n    placeholder: placeholder,\n    className: classNames,\n    value: initValue,\n    disabled: disabled,\n    readOnly: readOnly,\n    onChange: changeHandler,\n    onFocus: focusHandler,\n    onBlur: blurHandler,\n    autoComplete: \"off\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }));\n};\nTextarea.defaultProps = defaultProps;\nexport default Textarea;","map":{"version":3,"names":["React","useEffect","useState","TextBoxCommonBase","TextareaBase","TextBoxDisable","TextBoxEnable","defaultProps","disabled","readOnly","className","placeholder","initialValue","Textarea","_ref","value","onChange","onFocus","onBlur","props","_objectWithoutProperties","initValue","setInitValue","changeHandler","event","target","focusHandler","e","blurHandler","undefined","classNames","__jsx","_extends","autoComplete","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Photoshop2021x64/Github Repo/Eternal/src/components/textarea.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  TextBoxCommonBase,\n  TextareaBase,\n  TextBoxDisable,\n  TextBoxEnable,\n} from './utils/theme';\n\nexport interface Props {\n  value?: string;\n  initialValue?: string;\n  placeholder?: string;\n  readOnly?: boolean;\n  disabled?: boolean;\n  className?: string;\n  onChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onFocus?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const defaultProps = {\n  disabled: false,\n  readOnly: false,\n  className: '',\n  placeholder: '',\n  initialValue: '',\n};\n\ntype NativeAttrs = Omit<React.TextareaHTMLAttributes<any>, keyof Props>;\n\nexport type TextareaPropsType = Props & NativeAttrs;\n\nconst Textarea: React.FC<React.PropsWithChildren<TextareaPropsType>> = ({\n  className,\n  value,\n  initialValue,\n  disabled,\n  readOnly,\n  placeholder,\n  onChange,\n  onFocus,\n  onBlur,\n  ...props\n}) => {\n  const [initValue, setInitValue] = useState<string>(initialValue);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (disabled || readOnly) return;\n    setInitValue(event.target.value);\n    onChange && onChange(event);\n  };\n\n  const focusHandler = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    onFocus && onFocus(e);\n  };\n  const blurHandler = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    onBlur && onBlur(e);\n  };\n\n  useEffect(() => {\n    if (value === undefined) return;\n    setInitValue(value);\n  }, [value]);\n\n  const classNames =\n    TextBoxCommonBase +\n    ' ' +\n    TextareaBase +\n    ' ' +\n    (disabled === true ? TextBoxDisable : TextBoxEnable) +\n    ' ' +\n    className;\n\n  return (\n    <textarea\n      placeholder={placeholder}\n      className={classNames}\n      value={initValue}\n      disabled={disabled}\n      readOnly={readOnly}\n      onChange={changeHandler}\n      onFocus={focusHandler}\n      onBlur={blurHandler}\n      autoComplete=\"off\"\n      {...props}\n    />\n  );\n};\n\nTextarea.defaultProps = defaultProps;\n\nexport default Textarea;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,aAAa,QACR,eAAe;AActB,OAAO,MAAMC,YAAY,GAAG;EAC1BC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAMD,MAAMC,QAA8D,GAAGC,IAAA,IAWjE;EAAA,IAXkE;MACtEJ,SAAS;MACTK,KAAK;MACLH,YAAY;MACZJ,QAAQ;MACRC,QAAQ;MACRE,WAAW;MACXK,QAAQ;MACRC,OAAO;MACPC;IAEF,CAAC,GAAAJ,IAAA;IADIK,KAAK,GAAAC,wBAAA,CAAAN,IAAA;EAER,MAAM;IAAA,GAACO,SAAS;IAAA,GAAEC;EAAY,IAAIpB,QAAQ,CAASU,YAAY,CAAC;EAEhE,MAAMW,aAAa,GAAIC,KAA6C,IAAK;IACvE,IAAIhB,QAAQ,IAAIC,QAAQ,EAAE;IAC1Ba,YAAY,CAACE,KAAK,CAACC,MAAM,CAACV,KAAK,CAAC;IAChCC,QAAQ,IAAIA,QAAQ,CAACQ,KAAK,CAAC;EAC7B,CAAC;EAED,MAAME,YAAY,GAAIC,CAAwC,IAAK;IACjEV,OAAO,IAAIA,OAAO,CAACU,CAAC,CAAC;EACvB,CAAC;EACD,MAAMC,WAAW,GAAID,CAAwC,IAAK;IAChET,MAAM,IAAIA,MAAM,CAACS,CAAC,CAAC;EACrB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,KAAKc,SAAS,EAAE;IACzBP,YAAY,CAACP,KAAK,CAAC;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,UAAU,GACd3B,iBAAiB,GACjB,GAAG,GACHC,YAAY,GACZ,GAAG,IACFI,QAAQ,KAAK,IAAI,GAAGH,cAAc,GAAGC,aAAa,CAAC,GACpD,GAAG,GACHI,SAAS;EAEX,OACEqB,KAAA,aAAAC,QAAA;IACErB,WAAW,EAAEA,WAAY;IACzBD,SAAS,EAAEoB,UAAW;IACtBf,KAAK,EAAEM,SAAU;IACjBb,QAAQ,EAAEA,QAAS;IACnBC,QAAQ,EAAEA,QAAS;IACnBO,QAAQ,EAAEO,aAAc;IACxBN,OAAO,EAAES,YAAa;IACtBR,MAAM,EAAEU,WAAY;IACpBK,YAAY,EAAC;EAAK,GACdd,KAAK;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACV,CAAC;AAEN,CAAC;AAED1B,QAAQ,CAACN,YAAY,GAAGA,YAAY;AAEpC,eAAeM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}