{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { useRef, useCallback, useEffect } from 'react';\nexport const isClient = !!(false && window.document && window.document.createElement);\n// export enum ScrollDirections {\n//   Horizontal,\n//   Vertical\n// }\n\nfunction scrollToPercent(el, {\n  container,\n  percentOfElement,\n  offsetPX,\n  direction,\n  percentOfContainer\n}) {\n  const rect = el.current.getClientRects()[0];\n  const isVertical = direction === 'vertical';\n  const refSize = isVertical ? rect.height : rect.width;\n  const elemScroll = isVertical ? rect.y : rect.x;\n  const scrollSize = container === window ? isVertical ? container.innerHeight : container.innerWidth : isVertical ? container.scrollHeight : container.scrollWidth;\n  let addOffset = refSize * percentOfElement / 100;\n  if (offsetPX) {\n    addOffset += offsetPX;\n  }\n  const containerScroll = isVertical ? container.scrollY : container.scrollX;\n  const newScroll = containerScroll + elemScroll + (scrollSize * percentOfContainer / 100 + addOffset);\n  const scrollObj = isVertical ? {\n    top: newScroll\n  } : {\n    left: newScroll\n  };\n  window.scrollTo(_objectSpread(_objectSpread({}, scrollObj), {}, {\n    behavior: 'smooth'\n  }));\n}\n\n// interface ScrollOpts {\n//   /**\n//    * Offset in percentage of the element's client dimentions\n//    * default is to scroll to center the element in the scrolling pane, hence 50%\n//    */\n//   percentOfElement?: number;\n//   /**\n//    * The offset in pixels, whch will be added to the percentage of the element\n//    */\n//   offsetPX?: number;\n//   /**\n//    * Whether to run the scroll on mounting\n//    */\n//   onMount?: boolean;\n//   /**\n//    * The scrollable container in which the ref element is scrolling\n//    */\n//   container?: any;\n//   // default is the center of the scrolling container, hence 50%\n//   percentOfContainer?: number;\n//   direction?: ScrollDirections;\n// }\n\nexport function useRefScroll({\n  percentOfElement = 50,\n  offsetPX = 0,\n  onMount = false,\n  container = isClient ? window : null,\n  percentOfContainer = 50,\n  direction = 'vertical'\n}) {\n  const elRef = useRef(null);\n  const scroll = useCallback(() => {\n    if (elRef.current) {\n      scrollToPercent(elRef, {\n        percentOfElement,\n        offsetPX,\n        container,\n        percentOfContainer,\n        direction\n      });\n    }\n  }, [elRef.current]);\n  useEffect(() => {\n    if (onMount) {\n      scroll();\n    }\n  }, []);\n  return {\n    elRef,\n    scroll\n  };\n}\n\n// function MyComponent() {\n//   // using the hook without arguments will scroll the element to the center of the\n//   // window's viewport\n//   // alias elRef to myDiv for easier usage if having multiple elements\n//   // in the same component\n\n//   const { elRef: myDiv, scroll } = useRefScroller();\n\n//   return (\n//     <div>\n//       <button onClick={scroll}>Scroll</button>\n\n//       <div ref={myDiv}>\n//         `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum efficitur, massa vitae consectetur egestas, justo magna\n//         facilisis arcu, non accumsan lacus ipsum sit amet nisl.`\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":["useRef","useCallback","useEffect","isClient","window","document","createElement","scrollToPercent","el","container","percentOfElement","offsetPX","direction","percentOfContainer","rect","current","getClientRects","isVertical","refSize","height","width","elemScroll","y","x","scrollSize","innerHeight","innerWidth","scrollHeight","scrollWidth","addOffset","containerScroll","scrollY","scrollX","newScroll","scrollObj","top","left","scrollTo","_objectSpread","behavior","useRefScroll","onMount","elRef","scroll"],"sources":["C:/Photoshop2021x64/Github Repo/Eternal/src/helpers/use-ref-scroll.tsx"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\nexport const isClient = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n// export enum ScrollDirections {\n//   Horizontal,\n//   Vertical\n// }\n\nfunction scrollToPercent(\n  el,\n  { container, percentOfElement, offsetPX, direction, percentOfContainer }\n) {\n  const rect = el.current.getClientRects()[0];\n  const isVertical = direction === 'vertical';\n  const refSize = isVertical ? rect.height : rect.width;\n  const elemScroll = isVertical ? rect.y : rect.x;\n\n  const scrollSize =\n    container === window\n      ? isVertical\n        ? container.innerHeight\n        : container.innerWidth\n      : isVertical\n      ? container.scrollHeight\n      : container.scrollWidth;\n\n  let addOffset = (refSize * percentOfElement) / 100;\n  if (offsetPX) {\n    addOffset += offsetPX;\n  }\n\n  const containerScroll = isVertical ? container.scrollY : container.scrollX;\n  const newScroll =\n    containerScroll +\n    elemScroll +\n    ((scrollSize * percentOfContainer) / 100 + addOffset);\n\n  const scrollObj = isVertical ? { top: newScroll } : { left: newScroll };\n\n  window.scrollTo({\n    ...scrollObj,\n    behavior: 'smooth',\n  });\n}\n\n// interface ScrollOpts {\n//   /**\n//    * Offset in percentage of the element's client dimentions\n//    * default is to scroll to center the element in the scrolling pane, hence 50%\n//    */\n//   percentOfElement?: number;\n//   /**\n//    * The offset in pixels, whch will be added to the percentage of the element\n//    */\n//   offsetPX?: number;\n//   /**\n//    * Whether to run the scroll on mounting\n//    */\n//   onMount?: boolean;\n//   /**\n//    * The scrollable container in which the ref element is scrolling\n//    */\n//   container?: any;\n//   // default is the center of the scrolling container, hence 50%\n//   percentOfContainer?: number;\n//   direction?: ScrollDirections;\n// }\n\nexport function useRefScroll({\n  percentOfElement = 50,\n  offsetPX = 0,\n  onMount = false,\n  container = isClient ? window : null,\n  percentOfContainer = 50,\n  direction = 'vertical',\n}) {\n  const elRef = useRef(null);\n\n  const scroll = useCallback(() => {\n    if (elRef.current) {\n      scrollToPercent(elRef, {\n        percentOfElement,\n        offsetPX,\n        container,\n        percentOfContainer,\n        direction,\n      });\n    }\n  }, [elRef.current]);\n\n  useEffect(() => {\n    if (onMount) {\n      scroll();\n    }\n  }, []);\n\n  return { elRef, scroll };\n}\n\n// function MyComponent() {\n//   // using the hook without arguments will scroll the element to the center of the\n//   // window's viewport\n//   // alias elRef to myDiv for easier usage if having multiple elements\n//   // in the same component\n\n//   const { elRef: myDiv, scroll } = useRefScroller();\n\n//   return (\n//     <div>\n//       <button onClick={scroll}>Scroll</button>\n\n//       <div ref={myDiv}>\n//         `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum efficitur, massa vitae consectetur egestas, justo magna\n//         facilisis arcu, non accumsan lacus ipsum sit amet nisl.`\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":";;;;;AAAA,SAASA,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACtD,OAAO,MAAMC,QAAQ,GAAG,CAAC,EACvB,SACAC,MAAM,CAACC,QAAQ,IACfD,MAAM,CAACC,QAAQ,CAACC,aAAa,CAC9B;AACD;AACA;AACA;AACA;;AAEA,SAASC,eAAeA,CACtBC,EAAE,EACF;EAAEC,SAAS;EAAEC,gBAAgB;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAmB,CAAC,EACxE;EACA,MAAMC,IAAI,GAAGN,EAAE,CAACO,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAMC,UAAU,GAAGL,SAAS,KAAK,UAAU;EAC3C,MAAMM,OAAO,GAAGD,UAAU,GAAGH,IAAI,CAACK,MAAM,GAAGL,IAAI,CAACM,KAAK;EACrD,MAAMC,UAAU,GAAGJ,UAAU,GAAGH,IAAI,CAACQ,CAAC,GAAGR,IAAI,CAACS,CAAC;EAE/C,MAAMC,UAAU,GACdf,SAAS,KAAKL,MAAM,GAChBa,UAAU,GACRR,SAAS,CAACgB,WAAW,GACrBhB,SAAS,CAACiB,UAAU,GACtBT,UAAU,GACVR,SAAS,CAACkB,YAAY,GACtBlB,SAAS,CAACmB,WAAW;EAE3B,IAAIC,SAAS,GAAIX,OAAO,GAAGR,gBAAgB,GAAI,GAAG;EAClD,IAAIC,QAAQ,EAAE;IACZkB,SAAS,IAAIlB,QAAQ;EACvB;EAEA,MAAMmB,eAAe,GAAGb,UAAU,GAAGR,SAAS,CAACsB,OAAO,GAAGtB,SAAS,CAACuB,OAAO;EAC1E,MAAMC,SAAS,GACbH,eAAe,GACfT,UAAU,IACRG,UAAU,GAAGX,kBAAkB,GAAI,GAAG,GAAGgB,SAAS,CAAC;EAEvD,MAAMK,SAAS,GAAGjB,UAAU,GAAG;IAAEkB,GAAG,EAAEF;EAAU,CAAC,GAAG;IAAEG,IAAI,EAAEH;EAAU,CAAC;EAEvE7B,MAAM,CAACiC,QAAQ,CAAAC,aAAA,CAAAA,aAAA,KACVJ,SAAS;IACZK,QAAQ,EAAE;EAAQ,EACnB,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAAC;EAC3B9B,gBAAgB,GAAG,EAAE;EACrBC,QAAQ,GAAG,CAAC;EACZ8B,OAAO,GAAG,KAAK;EACfhC,SAAS,GAAGN,QAAQ,GAAGC,MAAM,GAAG,IAAI;EACpCS,kBAAkB,GAAG,EAAE;EACvBD,SAAS,GAAG;AACd,CAAC,EAAE;EACD,MAAM8B,KAAK,GAAG1C,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAM2C,MAAM,GAAG1C,WAAW,CAAC,MAAM;IAC/B,IAAIyC,KAAK,CAAC3B,OAAO,EAAE;MACjBR,eAAe,CAACmC,KAAK,EAAE;QACrBhC,gBAAgB;QAChBC,QAAQ;QACRF,SAAS;QACTI,kBAAkB;QAClBD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC8B,KAAK,CAAC3B,OAAO,CAAC,CAAC;EAEnBb,SAAS,CAAC,MAAM;IACd,IAAIuC,OAAO,EAAE;MACXE,MAAM,CAAC,CAAC;IACV;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAED,KAAK;IAAEC;EAAO,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}